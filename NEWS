telepathy-glib 0.99.12 (UNRELEASED)
===================================

Fixes:

• stop hardcoding python's path in .py scripts (fd.o #76495, Guillaume)
• fixed some code issues discovered by compiling with clang
  (fd.o #79006, Guillaume)
• replaced tp_verify_* with G_STATIC_ASSERTs, fixing the build with
  more recent gtk-doc (Simon)
• autogen.sh: run gtkdocize from $srcdir in out-of-source builds
  (fd.o #94391, Philip Withnall)
• tests: fix build failure with glib >= 2.46 due to duplicate test paths
  (fd.o #92245, George Kiagiadakis)
• tests: Fix a service file path to fix the build with installed tests
  (fd.o #90991, Philip Withnall)

telepathy-glib 0.99.11 (2014-05-14)
===================================

The “electioneering” release.

API breaks:

• "handle type" has been replaced with "entity type" in all function names,
  properties, constants etc. ("git grep -i handle.type" will be useful)

• tp_connection_manager_param_get_default() has been removed,
  use tp_connection_manager_param_dup_default_variant() instead

• tp_message_set() has been removed, use tp_message_set_variant() instead

• tp_capabilities_get_channel_classes() has been removed, and
  tp_capabilities_dup_channel_classes_variant() has been renamed to
  tp_capabilities_dup_channel_classes(). Similarly,
  the old TpCapabilities:channel-classes has been removed, and
  TpCapabilities:channel-classes-variant has been renamed to
  TpCapabilities:channel-classes

• tp_account_get_avatar_async() has been removed, use
  tp_account_dup_avatar_async() (which returns GBytes) instead

• tp_text_channel_get_message_types() has been removed, use
  tp_text_channel_supports_message_type() instead

• TpAccount:connection-error-details, and the corresponding
  argument in TpAccount::status-changed, changed from GHashTable to GVariant

• TpChannelDispatchOperation:cdo-properties,
  TpChannel:channel-properties and TpObserveChannelContext:observer-info
  changed from GHashTable to GVariant

• TpChannel no longer implements TpChannelIface;
  TpChannel:entity-type, TpChannel:handle and TpChannel:channel-type
  have changed from read/write/construct-only to read-only, so TpChannel
  subclasses must stop passing handle-type or entity-type to the constructor

• tp_dbus_connection_try_register_object() can export a GDBusObjectSkeleton;
  this will use g_dbus_object_get_interfaces(), ignoring any TpSvc*
  interfaces that are not represented in that list. Exporting a GDBusObject
  that is not a GDBusObjectSkeleton is not currently allowed.

• TpBaseProtocol and TpBaseConnection are now subclasses of
  GDBusObjectSkeleton, and no longer implement any TpSvc* interfaces.
  They no longer have virtual methods to list interface names; subclasses
  are expected to register all their interfaces (TpSvc* or otherwise) via
  g_dbus_object_skeleton_add_interface().

• TpBaseContactList and TpPresenceMixin don't implement TpSvc* interfaces
  either; instead, they call g_dbus_object_skeleton_add_interface()
  on their associated TpBaseConnection.

• TpSvcInterfaceSkeleton has moved to the -dbus library, but now has a
  public constructor in that library.

• The TpBaseConnectionClass.fill_contact_attributes() vfunc now takes
  a GVariantDict argument. TpContactAttributeMap has been removed.

• TpDBusPropertiesMixin communicates with GDBus on a per-interface basis
  rather than by implementing TpSvcDBusProperties

• TpPresenceMixin is now a GInterface. The only "glue" required is to
  implement its virtual methods (which now take a TpPresenceMixin * first
  argument), call tp_presence_mixin_init() in constructed(), and call
  tp_presence_mixin_fill_contact_attributes() in fill_contact_attributes().

• TpHandle is now a guint32, not a guint. There is a static assertion that
  these are the same size; we might later add support for architectures
  where their sizes differ, in the unlikely event that anyone finds one.

• TpDBusPropertiesMixin has moved to the -dbus library, and is no longer
  present in the class struct of public classes.

• Accessing a missing property raises o.fd.DBus.Error.InvalidArgs,
  not im.telepathy.v1.Error.NotImplemented. Similarly, trying to write
  to a read-only property raises o.fd.DBus.Error.InvalidArgs,
  not im.t.v1.Error.PermissionDenied.

• Most GObject properties of TpBasePasswordChannel have been removed.

• TpBaseConnection:dbus-status, TpBaseConnection:requestable-channel-classes
  have been removed.

• TpPresenceMixin no longer supports status parameters other than the
  message, and its API has been simplified accordingly.

• tp_group_mixin_change_members() takes a GVariant for the details.

• Some unused API has been removed from TpGroupMixin.

• The expected channel class for ContactSearch channels has changed to
  match the specification (fd.o #77030).

Other significant changes:

• TpWeakRef now uses a GWeakRef internally

telepathy-glib 0.99.10 (2014-04-03)
===================================

The “you and whose army?” release.

API breaks:

• telepathy-glib now uses GDBus' G_BUS_TYPE_SESSION, not
  libdbus/dbus-glib's DBUS_BUS_STARTER, as its D-Bus connection:

  · every function that previously involved a dbus-glib DBusGMethodInvocation
    now uses a GDBus GDBusMethodInvocation
  · public headers do not include <dbus/dbus-glib.h>
  · D-Bus errors will now come from the G_IO_ERROR and G_DBUS_ERROR
    domains
  · object implementors need to be more careful to register well-known
    objects at their documented object-paths *before* requesting the
    corresponding bus names
  · TP_DBUS_ERROR_UNKNOWN_REMOTE_ERROR has been replaced by
    G_IO_ERROR_DBUS_ERROR
  · TpProxy::interface-added, dbus-glib signals marshallers,
    and the _init_known_interfaces() family of functions are no longer
    required or implemented

  However, dbus-glib's "specialized type" system is still used in the
  public API, for now.

  (fd.o #28782, Simon)

• The "factory" construct-time property for all TpProxy subclasses is
  now mandatory:

  · tp_account_manager_set_default() and tp_account_manager_can_set_default()
    have been removed, use tp_client_factory_set_default(),
    tp_client_factory_can_set_default() and tp_client_factory_dup() instead.
  · tp_account_manager_new() and tp_account_manager_new_with_factory() have
    been removed, use tp_client_factory_dup_account_manager() instead.
    tp_account_manager_dup() still exists, and is now equivalent to calling
    tp_client_factory_dup_account_manager() on the result of
    tp_client_factory_dup().
  · tp_channel_dispatcher_new() has been removed, use
    tp_client_factory_dup_channel_dispatcher() instead.
  · tp_connection_manager_new() has been removed, use
    tp_client_factory_ensure_connection_manager() instead.

  (fd.o #76828; Xavier, Simon)

• TpDBusDaemon has been replaced by TpClientFactory or GDBusConnection,
  depending on context. (fd.o #76828; Xavier, Simon)

• The "-core" shared library has gone away, and some functionality that
  primarily used dbus-glib types (tp_asv_*, tp_g_value_slice_*,
  tp_value_array_*) has moved into telepathy-glib-1-dbus. (fd.o #76855, Simon)

telepathy-glib 0.99.9 (2013-03-25)
==================================

The “scatterbrain” release.

• Make the Logger properly parallel-installable: it writes logs to
  XDG_DATA_HOME/telepathy-1/logs, and also reads from Telepathy 0.x locations
  but does not write them (fd.o #70990, Guillaume)

• Re-namespace examples to telepathy-1-example-* (Simon)

• Start tracking ABI again (still no ABI guarantees or SONAME management,
  but at least we're tracking symbol versioning) (fd.o #76462, Simon)

• Hide some symbols which should not have been exported by the Logger library
  (fd.o #76462, Simon)

• Provide GNOME-style installed tests (only for telepathy-glib so far,
  not for the Logger) if configured with --enable-installed-tests
  (fd.o #74626, Simon)

• Use GTest for all C/C++ tests

• Avoid writing to XDG_CACHE_HOME in Logger tests

telepathy-glib 0.99.8 (2013-03-19)
==================================

The “like spinning plates” release.

Dependencies:

• GLib ≥ 2.39.90
• dbus-glib ≥ 0.102

API breaks caused by telepathy-spec changes:

• Account.AccountPropertyChanged has been replaced with
  the standard o.fd.DBus.Properties.PropertiesChanged

• Handle_Type is now Entity_Type, and all uses of the term have also been
  renamed (TpEntityType, TargetEntityType, etc.)

• HandleChannel's Requests_Satisfied parameter has changed from ao
  (array of object path) to a{oa{sv}} (map from object path to its immutable
  properties), replacing Handler_Info["request-properties"]. Observer
  has had a similar change.

Other API breaks:

• Various APIs that previously took a GHashTable<string, GValue> now take
  a GVariant of type G_VARIANT_TYPE_VARDICT, often by deleting the GHashTable
  version and removing the _vardict suffix from an existing GVariant version

• tp_message_peek has been superseded by tp_message_dup_part

• TpMessage string accessors now return a copied string, and their names
  contain "dup" instead of "get"

• TpProtocol and TpTLSCertificate objects cannot be created directly,
  go via TpClientFactory instead

• The tpl-extensions pkg-config module has gone away

Deleted draft API that never had a satisfactory implementation:

• Account.I.ExternalPasswordStorage1
• Channel.I.CredentialsStorage1
• CM.I.AccountStorage1

Additions:

• TpLogger, a TpProxy subclass which hosts generated code for talking to
  the Logger (but you should use libtelepathy-logger-1 instead)

• tp_asv_from_vardict, tp_asv_to_vardict

• tp_base_connection_get_account_path_suffix

• more TpAccountChannelRequest high-level API

Fixes:

• don't leak every D-Bus method call result, a regression in 0.23.1 (Simon)

• fix a memory leak when cleaning up TpProxy "prepare" requests
  (fd.o #76000, Simon)

• fix a memory leak for paths to contacts' avatar data (fd.o #76000, Simon)

telepathy-glib 0.99.7 (2014-01-29)
==================================

The “jigsaw falling into place” release.

API breaks:

• Spec 0.99.7
  · Client API (Observer, ChannelDispatchOperation and Handler) are now channel
    singular.
  · Connection.NewChannels has been replaced by NewChannel
  · Connection.Requests.RequestableChannelClasses has been moved to Connection
  · ChannelDispatchOperation.HandleWithTime() has been merged into
     HandleWith()
  · Handler.HandleWith::User_Action_Time: use a signed type
  · Channel.I.DTMF has been removed and re-implemented into Content.I.DTMF and
    Channel.T.Call.
  · Account.I.Hidden, AccountManager.I.Hidden have been removed

• TpChannelManager now uses a TpChannelManagerRequest object instead of an
  opaque pointer to represent a specific channel request. (fd.o #69430, Guillaume)

telepathy-glib 0.99.6 (2014-01-13)
==================================

The “little by little” release.

API breaks:

• Spec 0.99.6
  · merge Conn.I.Contacts into Connection
  · do not include Conn.I.Requests in Connection.Interfaces

• Better parallel-installability (fd.o #49737, Simon):
  · rename Logger's GIR to TelepathyLogger-1
  · explicitly ask for TelepathyGLib-1 in examples

• TpContactsMixin no longer exists: instead, TpBaseConnection has a
  fill_contacts_attribute() virtual method (fd.o #50093, Simon)

• Replace TpPresenceMixinClass.get_contact_statuses (multiple contacts)
  with a simpler TpPresenceMixinClass.get_contact_status (one contact)
  (fd.o #50093, Simon)

• TpBaseConnection has more ABI padding (fd.o #50093, Simon)

• New mandatory method TpBlockableContactListInterface.is_blocked
  (fd.o #50093, Simon)

Other changes:

• Include telepathy-farstream in telepathy-glib source releases
  (fd.o #73409, Simon)

• Enable GLib 2.36 deprecation warnings (fd.o #71048, Simon)

• TpFileTransferChannel: fix possible crashes (fd.o #72319, Xavier)

• Improve debug output for tp_list_connection_managers (fd.o #68390;
  Simon, Guillaume)

telepathy-glib 0.99.5 (2013-11-11)
==================================

The “high and dry” release.

API breaks:

• Spec 0.99.5
  · All D-Bus namespaces have changed from im.telepathy1 to im.telepathy.v1
  · The Renaming1.Renamed signal carries the identifier, not just the handle
  · .manager and .client files go in $XDG_DATA_DIRS/telepathy-1 instead
    of $XDG_DATA_DIRS/telepathy, to be parallel-installable with Telepathy 0

• IRCCommand1 is marked as stable

Major functionality changes:

• telepathy-logger is now part of the telepathy-glib module.
  Configure with --disable-logger if you don't want it.

There was no 0.99.4 release for this module.

telepathy-glib 0.99.3 (2013-10-28)
==================================

Enhancements:

• Don't strip ABI versions from generated code (Simon)
• unescape_protocol: stop replacing '_' with '-' (Guillaume)

telepathy-glib 0.99.2 (2013-09-27)
==================================

The “no surprises” release.

This is another snapshot, so that the 'next' branches of telepathy-salut
and telepathy-haze can work.

Dependencies:

• GLib ≥ 2.34 is required

API changes:

• Protocol names may now contain underscores, but not hyphen/minus
  (telepathy-spec 0.99.1 says this is OK).

• Connection manager names may now start with underscores
  (telepathy-spec 0.99.2 says this is OK)

Fixes:

• Merged from telepathy-glib master, see NEWS-0.x

telepathy-glib 0.99.1 (2013-09-17)
==================================

The “house of cards” release.

This is a snapshot of the branch that will become telepathy-glib 1.0,
corresponding to telepathy-spec 0.99.1. It is not really usable yet:
we're releasing it to have a fixed point when upgrading connection
managers and other related projects.

See UPGRADING for some notes on what has changed in the API and ABI.
